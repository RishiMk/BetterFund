package com.example.demo.controllers;

import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.example.demo.dto.UserAuth;
import com.example.demo.dto.UserLogin;
import com.example.demo.dto.UserRegister;
import com.example.demo.dto.UserResponse;
import com.example.demo.services.UserService;

import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;


@RestController
@RequestMapping("/api/auth")
public class AuthController {
	@Autowired
	private UserService userService;
	

    @PostMapping("/login")
    public ResponseEntity<UserAuth> loginUser(@RequestBody UserLogin entity) {
        Optional<UserAuth> result = userService.getUser(entity);

        return result
                .map(ResponseEntity::ok)
                .orElse(ResponseEntity.status(HttpStatus.UNAUTHORIZED).build());
    }
    @PostMapping("/register")
    public ResponseEntity<UserResponse> registerUser(@RequestBody UserRegister dto) {
        return userService.registerUser(dto)
                .map(ResponseEntity::ok)
                .orElse(ResponseEntity.status(HttpStatus.CONFLICT)
                    .body(new UserResponse(false, "Email already exists")));
    }
    
    @PostMapping("/admin/changerole")
    public ResponseEntity<UserResponse> changeUserRole(@RequestBody RoleChangeRequest request) {
        return userService.changeUserRole(request)
                .map(ResponseEntity::ok)
                .orElse(ResponseEntity.status(HttpStatus.BAD_REQUEST)
                        .body(new UserResponse(false, "Role change failed")));
    }

  
}
